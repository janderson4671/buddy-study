API Endpoints 

--------------------------------------------------------------------------------------------------------------------
Database Management:

"api/database/clearUsers" -> Clears everything from the user collection (GET)
    response: {
        success : bool,     (NOT NULL)
        message : string
    }

"api/database/clearStudySets" -> Clears everything from the study-set collection (GET)
    respone: {
        success : bool,     (NOT NULL)
        message : string
    }


--------------------------------------------------------------------------------------------------------------------
User Accounts:

"api/user/register" -> register a new user into the system (POST)
    request: {
        username : string,  (NOT NULL)
        password : string,  (NOT NULL)
        email    : string   (NOT NULL)
    }
    response: {
        username : string,  (NOT NULL)
        success : bool,     (NOT NULL)
        message : string 
    }

"api/user/login" -> login an existing user in the system (POST)
    request: {
        username : string,  (NOT NULL)
        password : string   (NOT NULL)
    }
    response: {
        username : string,  (Can be NULL if !success)
        success : bool,     (NOT NULL)
        message : string 
    }

"api/user/delete" -> delete an account for an existing user in system (And all relevant data) (POST)
    request: {
        username : string,  (NOT NULL)
        password : string   (NOT NULL)
    }
    response: {
        success : bool,     (NOT NULL)
        message : string
    }

--------------------------------------------------------------------------------------------------------------------
Managing Study Sets:

"api/studyset/create" -> Create a study set for a user (POST)
    request: {
        username : string,  (NOT NULL)
        subject  : string   (NOT NULL)
    }
    response: {
        success : bool,     (NOT NULL)
        message : string
        studysetID : string (Can be NULL if !success)
    }

"api/studyset/delete" -> delete a study set for a user (and associated Flashcards) (POST)
    request: {
        username : string,  (NOT NULL)
        studysetID : string (NOT NULL)
    }
    response: {
        success : bool,     (NOT NULL)
        message : string    
    }

"api/studyset/allsets/:username" -> retrieve all studysets associated with a user (GET)
    response: {
        success : bool,     (NOT NULL)
        message : string
        List<StudySet> : list of studysets associated with a user   (Can be NULL if !success)
    }

--------------------------------------------------------------------------------------------------------------------
Managing FlashCards:

"api/flashcard/create" -> create a new flashcard for a study set (POST) (Creates questionID)
    request: {
        studysetID : string,    (NOT NULL)
        questionText : string,  (NOT NULL)
        answerText : string     (NOT NULL)
    }
    response: {
        success : bool,         (NOT NULL)
        message : string (if there is an error)
    }

"api/flashcard/delete" -> delete an existing flashcard (POST)
    NOTE: Will cause all flashcards to be renumbered!!!
    request: {
        studysetID : string,    (NOT NULL)
        questionNum : int       (NOT NULL)
    }
    response: {
        success : bool,         (NOT NULL)
        message : string
    }

"api/flashcard/update" -> update an existing flashcard (POST)
    request: {
        studysetID : string,    (NOT NULL)
        questionID : string,      (NOT NULL)
        questionText : string,  (NOT NULL)
        answerText : string     (NOT NULL)
    }
    response: {
        success : bool,
        message : string
    }

"api/flashcard/allcards/:studysetID" -> retrieve all flashcards associated with a studyset (GET)
    response: {
        success : bool,
        message : string,
        list<Flashcard> : list of flashcards (Orderded by question number)
    }